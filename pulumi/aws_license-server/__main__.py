import pulumi
import pulumi_aws as aws

sentieon_vpc = aws.ec2.Vpc(
    "sentieon-vpc",
    cidr_block="10.0.0.0/16",
    enable_dns_hostnames=True,
    instance_tenancy="default",
    tags={
        "DELETE_ME": "",
        "Name": "sentieon_test_license_server_vpc",
    },
    opts=pulumi.ResourceOptions(protect=True),
)


license_server = aws.ec2.SecurityGroup("license-server",
    description="security group for sentieon license server",
    egress=[
        aws.ec2.SecurityGroupEgressArgs(
            cidr_blocks=["0.0.0.0/0"],
            description="",
            from_port=4,
            ipv6_cidr_blocks=[],
            prefix_list_ids=[],
            protocol="icmp",
            security_groups=[],
            self=False,
            to_port=-1,
        ),
        aws.ec2.SecurityGroupEgressArgs(
            cidr_blocks=["0.0.0.0/0"],
            description="",
            from_port=11,
            ipv6_cidr_blocks=[],
            prefix_list_ids=[],
            protocol="icmp",
            security_groups=[],
            self=False,
            to_port=-1,
        ),
        aws.ec2.SecurityGroupEgressArgs(
            cidr_blocks=["52.89.132.242/32"],
            description="",
            from_port=443,
            ipv6_cidr_blocks=[],
            prefix_list_ids=[],
            protocol="tcp",
            security_groups=[],
            self=False,
            to_port=443,
        ),
        aws.ec2.SecurityGroupEgressArgs(
            cidr_blocks=[],
            description="",
            from_port=-1,
            ipv6_cidr_blocks=["::/0"],
            prefix_list_ids=[],
            protocol="icmpv6",
            security_groups=[],
            self=False,
            to_port=-1,
        ),
        aws.ec2.SecurityGroupEgressArgs(
            cidr_blocks=["0.0.0.0/0"],
            description="",
            from_port=3,
            ipv6_cidr_blocks=[],
            prefix_list_ids=[],
            protocol="icmp",
            security_groups=[],
            self=False,
            to_port=-1,
        ),
        aws.ec2.SecurityGroupEgressArgs(
            cidr_blocks=["0.0.0.0/0"],
            description="",
            from_port=22,
            ipv6_cidr_blocks=["::/0"],
            prefix_list_ids=[],
            protocol="tcp",
            security_groups=[],
            self=False,
            to_port=22,
        ),
        aws.ec2.SecurityGroupEgressArgs(
            cidr_blocks=["0.0.0.0/0"],
            description="",
            from_port=0,
            ipv6_cidr_blocks=[],
            prefix_list_ids=[],
            protocol="-1",
            security_groups=[],
            self=False,
            to_port=0,
        ),
        aws.ec2.SecurityGroupEgressArgs(
            cidr_blocks=["0.0.0.0/0"],
            description="",
            from_port=8,
            ipv6_cidr_blocks=[],
            prefix_list_ids=[],
            protocol="icmp",
            security_groups=[],
            self=False,
            to_port=-1,
        ),
    ],
    ingress=[
        aws.ec2.SecurityGroupIngressArgs(
            cidr_blocks=["0.0.0.0/0"],
            description="",
            from_port=-1,
            ipv6_cidr_blocks=[],
            prefix_list_ids=[],
            protocol="icmp",
            security_groups=[],
            self=False,
            to_port=-1,
        ),
        aws.ec2.SecurityGroupIngressArgs(
            cidr_blocks=["0.0.0.0/0"],
            description="",
            from_port=22,
            ipv6_cidr_blocks=[],
            prefix_list_ids=[],
            protocol="tcp",
            security_groups=[],
            self=False,
            to_port=22,
        ),
        aws.ec2.SecurityGroupIngressArgs(
            cidr_blocks=[],
            description="",
            from_port=-1,
            ipv6_cidr_blocks=["::/0"],
            prefix_list_ids=[],
            protocol="icmpv6",
            security_groups=[],
            self=False,
            to_port=-1,
        ),
        aws.ec2.SecurityGroupIngressArgs(
            cidr_blocks=[
                "10.0.0.0/16",
                "0.0.0.0/0",
            ],
            description="",
            from_port=8990,
            ipv6_cidr_blocks=["::/0"],
            prefix_list_ids=[],
            protocol="tcp",
            security_groups=[],
            self=False,
            to_port=8990,
        ),
    ],
    name="sentieon-license-server",
    tags={
        "Name": "sentieon-license-server-security-group",
    },
    vpc_id="vpc-09544162c32f4affc",
    opts=pulumi.ResourceOptions(protect=True))c
